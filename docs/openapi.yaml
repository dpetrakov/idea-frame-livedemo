openapi: "3.0.3"
info:
  title: "Idea Frame Livedemo API"
  version: "1.0.0"
  description: |
    API для системы фрейминга портфеля инициатив
    
    Поддерживает:
    - Регистрацию и аутентификацию пользователей
    - Создание и управление инициативами
    - Оценку атрибутов (ценность, скорость, стоимость)
    - Комментарии к инициативам
    - Назначение ответственных
    - Фильтрацию и сортировку списка инициатив

servers:
  - url: "https://ideaframe.dimlight.online/api/v1"
    description: "Production server"
  - url: "http://localhost:8080/api/v1"
    description: "Development server"

security:
  - bearerAuth: []

paths:
  /health:
    get:
      summary: "Health check"
      description: "Проверка состояния сервиса и подключения к БД"
      tags: ["System"]
      security: []
      responses:
        '200':
          description: "Сервис работает"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'
              example:
                status: "ok"
                database: "connected"
                timestamp: "2023-12-07T10:30:00Z"
        '503':
          description: "Сервис недоступен"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /auth/register:
    post:
      summary: "Регистрация нового пользователя"
      description: "Создание учётной записи с автоматической авторизацией"
      tags: ["Auth"]
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegister'
            example:
              login: "alex"
              displayName: "Alex K"
              password: "secure123"
              confirmPassword: "secure123"
      responses:
        '201':
          description: "Пользователь создан и авторизован"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
              example:
                user:
                  id: "3f1d4e2c-8b7a-4d9f-9e1c-2a3b4c5d6e7f"
                  login: "alex"
                  displayName: "Alex K"
                  createdAt: "2023-12-07T10:30:00Z"
                token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                expiresAt: "2023-12-08T10:30:00Z"
        '400':
          description: "Ошибка валидации"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: "Пользователь уже существует"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /auth/login:
    post:
      summary: "Вход в систему"
      description: "Аутентификация пользователя и выдача JWT токена"
      tags: ["Auth"]
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLogin'
            example:
              login: "alex"
              password: "secure123"
      responses:
        '200':
          description: "Успешная авторизация"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '400':
          description: "Ошибка валидации"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: "Неверные учётные данные"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /users/me:
    get:
      summary: "Профиль текущего пользователя"
      description: "Получение информации о текущем авторизованном пользователе"
      tags: ["Users"]
      responses:
        '200':
          description: "Профиль пользователя"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /users:
    get:
      summary: "Список пользователей"
      description: "Получение списка пользователей для назначения ответственных"
      tags: ["Users"]
      responses:
        '200':
          description: "Список пользователей"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserBrief'
              example:
                - id: "3f1d4e2c-8b7a-4d9f-9e1c-2a3b4c5d6e7f"
                  login: "alex"
                  displayName: "Alex K"
                - id: "4e2d5f3c-9c8b-5e0g-0f2d-3b4c5d6e7f8g"
                  login: "maria"
                  displayName: "Maria R"
        '401':
          $ref: '#/components/responses/Unauthorized'

  /initiatives:
    get:
      summary: "Список инициатив"
      description: "Получение списка инициатив с фильтрацией и сортировкой"
      tags: ["Initiatives"]
      parameters:
        - name: filter
          in: query
          description: "Фильтр списка"
          schema:
            type: string
            enum: [all, mineCreated, assignedToMe]
            default: all
          example: all
        - name: limit
          in: query
          description: "Количество элементов (пагинация)"
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
          example: 20
        - name: offset
          in: query
          description: "Смещение для пагинации"
          schema:
            type: integer
            minimum: 0
            default: 0
          example: 0
      responses:
        '200':
          description: "Список инициатив"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InitiativesList'
              example:
                items:
                  - id: "5f3e6d4c-0d9e-5f0g-1g3e-4c5d6e7f8g9h"
                    title: "Бот для triage идей"
                    description: "# Описание\n\nАвтоматизация первичной обработки идей"
                    author:
                      id: "3f1d4e2c-8b7a-4d9f-9e1c-2a3b4c5d6e7f"
                      login: "alex"
                      displayName: "Alex K"
                    assignee:
                      id: "4e2d5f3c-9c8b-5e0g-0f2d-3b4c5d6e7f8g"
                      login: "maria"
                      displayName: "Maria R"
                    value: 5
                    speed: 4
                    cost: 2
                    weight: 3.83
                    commentsCount: 3
                    createdAt: "2023-12-07T10:30:00Z"
                    updatedAt: "2023-12-07T11:15:00Z"
                total: 1
                limit: 20
                offset: 0
        '401':
          $ref: '#/components/responses/Unauthorized'

    post:
      summary: "Создание инициативы"
      description: "Создание новой инициативы текущим пользователем"
      tags: ["Initiatives"]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InitiativeCreate'
            example:
              title: "Бот для triage идей"
              description: "# Описание\n\nАвтоматизация первичной обработки идей"
      responses:
        '201':
          description: "Инициатива создана"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Initiative'
              example:
                id: "5f3e6d4c-0d9e-5f0g-1g3e-4c5d6e7f8g9h"
                title: "Бот для triage идей"
                description: "# Описание\n\nАвтоматизация первичной обработки идей"
                author:
                  id: "3f1d4e2c-8b7a-4d9f-9e1c-2a3b4c5d6e7f"
                  login: "alex"
                  displayName: "Alex K"
                assignee: null
                value: null
                speed: null
                cost: null
                weight: 0.0
                commentsCount: 0
                createdAt: "2023-12-07T10:30:00Z"
                updatedAt: "2023-12-07T10:30:00Z"
        '400':
          description: "Ошибка валидации"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /initiatives/{id}:
    get:
      summary: "Детали инициативы"
      description: "Получение полной информации об инициативе"
      tags: ["Initiatives"]
      parameters:
        - name: id
          in: path
          required: true
          description: "Идентификатор инициативы"
          schema:
            type: string
            format: uuid
          example: "5f3e6d4c-0d9e-5f0g-1g3e-4c5d6e7f8g9h"
      responses:
        '200':
          description: "Детали инициативы"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Initiative'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'

    patch:
      summary: "Обновление инициативы"
      description: "Обновление полей инициативы (атрибуты оценки, назначение ответственного)"
      tags: ["Initiatives"]
      parameters:
        - name: id
          in: path
          required: true
          description: "Идентификатор инициативы"
          schema:
            type: string
            format: uuid
          example: "5f3e6d4c-0d9e-5f0g-1g3e-4c5d6e7f8g9h"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InitiativeUpdate'
            example:
              value: 5
              speed: 4
              cost: 2
              assigneeId: "4e2d5f3c-9c8b-5e0g-0f2d-3b4c5d6e7f8g"
      responses:
        '200':
          description: "Инициатива обновлена"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Initiative'
        '400':
          description: "Ошибка валидации"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'

  /initiatives/{id}/comments:
    get:
      summary: "Комментарии к инициативе"
      description: "Получение списка комментариев к инициативе в хронологическом порядке"
      tags: ["Comments"]
      parameters:
        - name: id
          in: path
          required: true
          description: "Идентификатор инициативы"
          schema:
            type: string
            format: uuid
          example: "5f3e6d4c-0d9e-5f0g-1g3e-4c5d6e7f8g9h"
        - name: limit
          in: query
          description: "Количество комментариев"
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 50
          example: 50
        - name: offset
          in: query
          description: "Смещение для пагинации"
          schema:
            type: integer
            minimum: 0
            default: 0
          example: 0
      responses:
        '200':
          description: "Список комментариев"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentsList'
              example:
                items:
                  - id: "7g5f8e6d-2e0f-7g1h-3h5f-6d7e8f9g0h1i"
                    text: "Предлагаю добавить импорт из CSV"
                    author:
                      id: "4e2d5f3c-9c8b-5e0g-0f2d-3b4c5d6e7f8g"
                      login: "maria"
                      displayName: "Maria R"
                    createdAt: "2023-12-07T11:15:00Z"
                total: 1
                limit: 50
                offset: 0
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'

    post:
      summary: "Добавление комментария"
      description: "Создание нового комментария к инициативе"
      tags: ["Comments"]
      parameters:
        - name: id
          in: path
          required: true
          description: "Идентификатор инициативы"
          schema:
            type: string
            format: uuid
          example: "5f3e6d4c-0d9e-5f0g-1g3e-4c5d6e7f8g9h"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentCreate'
            example:
              text: "Предлагаю добавить импорт из CSV"
      responses:
        '201':
          description: "Комментарий создан"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
              example:
                id: "7g5f8e6d-2e0f-7g1h-3h5f-6d7e8f9g0h1i"
                text: "Предлагаю добавить импорт из CSV"
                author:
                  id: "3f1d4e2c-8b7a-4d9f-9e1c-2a3b4c5d6e7f"
                  login: "alex"
                  displayName: "Alex K"
                createdAt: "2023-12-07T11:15:00Z"
        '400':
          description: "Ошибка валидации"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: "JWT токен со сроком жизни 24 часа"

  responses:
    Unauthorized:
      description: "Требуется авторизация"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: "UNAUTHORIZED"
            message: "Требуется авторизация"
            correlationId: "req_12345"

    NotFound:
      description: "Ресурс не найден"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: "NOT_FOUND"
            message: "Инициатива не найдена"
            correlationId: "req_12346"

  schemas:
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          description: "Код ошибки"
          example: "VALIDATION_ERROR"
        message:
          type: string
          description: "Описание ошибки"
          example: "Название обязательно"
        details:
          type: object
          additionalProperties: true
          description: "Дополнительные детали ошибки"
          example:
            field: "title"
            rejectedValue: ""
        correlationId:
          type: string
          format: uuid
          description: "Идентификатор запроса для трассировки"
          example: "req_12345"

    HealthResponse:
      type: object
      required:
        - status
        - database
        - timestamp
      properties:
        status:
          type: string
          enum: [ok, error]
          description: "Статус сервиса"
          example: "ok"
        database:
          type: string
          enum: [connected, disconnected]
          description: "Статус подключения к БД"
          example: "connected"
        timestamp:
          type: string
          format: date-time
          description: "Время проверки"
          example: "2023-12-07T10:30:00Z"

    UserRegister:
      type: object
      required:
        - login
        - displayName
        - password
        - confirmPassword
      properties:
        login:
          type: string
          minLength: 3
          maxLength: 32
          pattern: '^[a-zA-Z0-9_-]+$'
          description: "Уникальный логин пользователя"
          example: "alex"
        displayName:
          type: string
          minLength: 1
          maxLength: 32
          description: "Отображаемое имя"
          example: "Alex K"
        password:
          type: string
          minLength: 8
          maxLength: 64
          description: "Пароль"
          example: "secure123"
        confirmPassword:
          type: string
          minLength: 8
          maxLength: 64
          description: "Подтверждение пароля"
          example: "secure123"

    UserLogin:
      type: object
      required:
        - login
        - password
      properties:
        login:
          type: string
          description: "Логин пользователя"
          example: "alex"
        password:
          type: string
          description: "Пароль"
          example: "secure123"

    User:
      type: object
      required:
        - id
        - login
        - displayName
        - createdAt
      properties:
        id:
          type: string
          format: uuid
          description: "Уникальный идентификатор"
          example: "3f1d4e2c-8b7a-4d9f-9e1c-2a3b4c5d6e7f"
        login:
          type: string
          description: "Логин пользователя"
          example: "alex"
        displayName:
          type: string
          description: "Отображаемое имя"
          example: "Alex K"
        createdAt:
          type: string
          format: date-time
          description: "Дата регистрации"
          example: "2023-12-07T10:30:00Z"

    UserBrief:
      type: object
      required:
        - id
        - login
        - displayName
      properties:
        id:
          type: string
          format: uuid
          description: "Уникальный идентификатор"
          example: "3f1d4e2c-8b7a-4d9f-9e1c-2a3b4c5d6e7f"
        login:
          type: string
          description: "Логин пользователя"
          example: "alex"
        displayName:
          type: string
          description: "Отображаемое имя"
          example: "Alex K"

    AuthResponse:
      type: object
      required:
        - user
        - token
        - expiresAt
      properties:
        user:
          $ref: '#/components/schemas/User'
        token:
          type: string
          description: "JWT токен"
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        expiresAt:
          type: string
          format: date-time
          description: "Время истечения токена"
          example: "2023-12-08T10:30:00Z"

    InitiativeCreate:
      type: object
      required:
        - title
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 140
          description: "Название инициативы"
          example: "Бот для triage идей"
        description:
          type: string
          maxLength: 10000
          nullable: true
          description: "Описание в формате Markdown"
          example: "# Описание\n\nАвтоматизация первичной обработки идей"

    InitiativeUpdate:
      type: object
      properties:
        value:
          type: integer
          minimum: 1
          maximum: 5
          nullable: true
          description: "Ценность (1-5)"
          example: 5
        speed:
          type: integer
          minimum: 1
          maximum: 5
          nullable: true
          description: "Скорость реализации (1-5)"
          example: 4
        cost:
          type: integer
          minimum: 1
          maximum: 5
          nullable: true
          description: "Стоимость (1-5)"
          example: 2
        assigneeId:
          type: string
          format: uuid
          nullable: true
          description: "Идентификатор ответственного"
          example: "4e2d5f3c-9c8b-5e0g-0f2d-3b4c5d6e7f8g"

    Initiative:
      type: object
      required:
        - id
        - title
        - author
        - weight
        - commentsCount
        - createdAt
        - updatedAt
      properties:
        id:
          type: string
          format: uuid
          description: "Уникальный идентификатор"
          example: "5f3e6d4c-0d9e-5f0g-1g3e-4c5d6e7f8g9h"
        title:
          type: string
          description: "Название инициативы"
          example: "Бот для triage идей"
        description:
          type: string
          nullable: true
          description: "Описание в формате Markdown"
          example: "# Описание\n\nАвтоматизация первичной обработки идей"
        author:
          $ref: '#/components/schemas/UserBrief'
        assignee:
          allOf:
            - $ref: '#/components/schemas/UserBrief'
          nullable: true
          description: "Ответственный за инициативу"
        value:
          type: integer
          minimum: 1
          maximum: 5
          nullable: true
          description: "Ценность (1-5)"
          example: 5
        speed:
          type: integer
          minimum: 1
          maximum: 5
          nullable: true
          description: "Скорость реализации (1-5)"
          example: 4
        cost:
          type: integer
          minimum: 1
          maximum: 5
          nullable: true
          description: "Стоимость (1-5)"
          example: 2
        weight:
          type: number
          format: float
          description: "Вычисляемый вес по формуле: (0.5*value + 0.3*speed - 0.2*cost) / сумме коэффициентов только по присутствующим атрибутам; округление до 2 знаков; при отсутствии всех атрибутов = 0.0"
          example: 3.83
        commentsCount:
          type: integer
          minimum: 0
          description: "Количество комментариев"
          example: 3
        createdAt:
          type: string
          format: date-time
          description: "Дата создания"
          example: "2023-12-07T10:30:00Z"
        updatedAt:
          type: string
          format: date-time
          description: "Дата последнего обновления"
          example: "2023-12-07T11:15:00Z"

    InitiativesList:
      type: object
      required:
        - items
        - total
        - limit
        - offset
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Initiative'
          description: "Список инициатив"
        total:
          type: integer
          minimum: 0
          description: "Общее количество инициатив"
          example: 42
        limit:
          type: integer
          minimum: 1
          description: "Лимит на страницу"
          example: 20
        offset:
          type: integer
          minimum: 0
          description: "Смещение"
          example: 0

    CommentCreate:
      type: object
      required:
        - text
      properties:
        text:
          type: string
          minLength: 1
          maxLength: 1000
          description: "Текст комментария"
          example: "Предлагаю добавить импорт из CSV"

    Comment:
      type: object
      required:
        - id
        - text
        - author
        - createdAt
      properties:
        id:
          type: string
          format: uuid
          description: "Уникальный идентификатор"
          example: "7g5f8e6d-2e0f-7g1h-3h5f-6d7e8f9g0h1i"
        text:
          type: string
          description: "Текст комментария"
          example: "Предлагаю добавить импорт из CSV"
        author:
          $ref: '#/components/schemas/UserBrief'
        createdAt:
          type: string
          format: date-time
          description: "Дата создания"
          example: "2023-12-07T11:15:00Z"

    CommentsList:
      type: object
      required:
        - items
        - total
        - limit
        - offset
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Comment'
          description: "Список комментариев"
        total:
          type: integer
          minimum: 0
          description: "Общее количество комментариев"
          example: 15
        limit:
          type: integer
          minimum: 1
          description: "Лимит на страницу"
          example: 50
        offset:
          type: integer
          minimum: 0
          description: "Смещение"
          example: 0

tags:
  - name: "System"
    description: "Системные операции"
  - name: "Auth"
    description: "Аутентификация и авторизация"
  - name: "Users"
    description: "Управление пользователями"
  - name: "Initiatives"
    description: "Управление инициативами"
  - name: "Comments"
    description: "Комментарии к инициативам"
