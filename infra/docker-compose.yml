version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: ideaframe-db
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-ideaframe}
      POSTGRES_USER: ${POSTGRES_USER:-ideaframe}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-secretpassword}
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ../db/migrations:/docker-entrypoint-initdb.d
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-ideaframe}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ideaframe-net

  backend:
    build:
      context: ../app/backend
      dockerfile: Dockerfile
    container_name: ideaframe-backend
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER:-ideaframe}:${POSTGRES_PASSWORD:-secretpassword}@postgres:5432/${POSTGRES_DB:-ideaframe}?sslmode=disable
      JWT_SECRET: ${JWT_SECRET}
      BACKEND_PORT: ${BACKEND_PORT:-8080}
      ENV: ${ENV:-dev}
      LOG_LEVEL: ${LOG_LEVEL:-info}
      # Email verification / SMTP
      AXENIX_EMAIL_DOMAIN: ${AXENIX_EMAIL_DOMAIN:-axenix.pro}
      EMAIL_CODES_TTL_MINUTES: ${EMAIL_CODES_TTL_MINUTES:-10}
      # SMTP
      SMTP_HOST: ${SMTP_HOST:-}
      SMTP_PORT: ${SMTP_PORT:-587}
      SMTP_USERNAME: ${SMTP_USERNAME:-}
      SMTP_PASSWORD: ${SMTP_PASSWORD:-}
      SMTP_FROM: ${SMTP_FROM:-}
      SMTP_TLS_SERVER_NAME: ${SMTP_TLS_SERVER_NAME:-}
      SMTP_TLS_INSECURE_SKIP_VERIFY: ${SMTP_TLS_INSECURE_SKIP_VERIFY:-false}
      SMTP_USE_SSL: ${SMTP_USE_SSL:-false}
      SMTP_EHLO_DOMAIN: ${SMTP_EHLO_DOMAIN:-localhost}
      # Admin roles
      ADMIN_EMAILS: ${ADMIN_EMAILS:-}
    depends_on:
      postgres:
        condition: service_healthy
    expose:
      - "${BACKEND_PORT:-8080}"
    networks:
      - ideaframe-net

  frontend:
    build:
      context: ../app/frontend
      dockerfile: Dockerfile
      args:
        VITE_API_BASE: ${VITE_API_BASE:-/api}
    container_name: ideaframe-frontend
    expose:
      - "80"
    networks:
      - ideaframe-net

  caddy:
    image: caddy:2.7-alpine
    container_name: ideaframe-proxy
    ports:
      - "${APP_PORT:-80}:80"
      - "${APP_HTTPS_PORT:-443}:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy-data:/data
      - caddy-config:/config
    environment:
      DOMAIN: ${DOMAIN:-localhost}
      ACME_EMAIL: ${ACME_EMAIL:-}
    depends_on:
      - backend
      - frontend
    networks:
      - ideaframe-net

networks:
  ideaframe-net:
    driver: bridge

volumes:
  postgres-data:
  caddy-data:
  caddy-config: