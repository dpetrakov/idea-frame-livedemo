---
description: Использовать это правило, когда требуется создать или оформить **PRD (Product Requirements Document)** для проекта. Оно описывает обязательные разделы, уровень детализации и формат.
alwaysApply: false
---

> **Filename & Location**:  
> Все PRD должны сохраняться в каталоге `docs/` с именем `prd.md`.  
> Если уже существует версия файла — она корректируется с учемтом новых вводных.

# Как оформлять PRD

Цель: дать быстрый, однозначный к реализации документ, достаточный для старта архитектуры и разработки.  
Фокус: **простота и надёжность**, мобильный сценарий по умолчанию.  
Исключаем из PRD: **производительность, безопасность, риски, готовность к демо** (эти темы покрываются другими артефактами).

---

## 0) Принципы и уровень детализации

- **Стиль:** тезисы и таблицы > длинные абзацы. Каждая секция ≤ 7 пунктов.
- **Критерий готовности PRD (DoR):**
  - Определены персона/роль и 3–7 ключевых сценариев.
  - Для каждого сценария есть 1–3 проверяемых функциональных требований (FR) и критерии приёмки (AC).
  - Описаны сущности и поля (минимальная модель данных) + возможные вычисления/правила.
  - Заданы **NFR про простоту и надёжность** (без перфа/безопасности).
  - Зафиксированы ограничения/зависимости и «вне скоупа».
- **Глубина описания:** достаточно, чтобы разные разработчики реализовали одинаково.
  - Для FR — указываем события (кто/что/когда), поля, валидации, состояния и AC с примерами.
  - Для данных — перечисление сущностей, обязательных полей, типов/диапазонов и примеров значений.
  - Для вычислений — формулы и округления (если есть), приведён пример расчёта.

---

## 1. Контекст и цели (≤ 5 пунктов)
- Что делаем и зачем пользователю/команде.
- Граница ответственности продукта в рамках демо.
- Главный критерий успеха (одна фраза).
**Детализация:** на уровне предложения; без бизнес-стратегии и roadmap.

## 2. Роли и персоны (1–2 роли)
- Коротко: кто пользуется, что умеет делать.
- Без различий прав и таблиц прав - у всех есть все права по умолчанию.
**Детализация:** 1–2 предложения на роль.

## 3. Ключевые пользовательские сценарии (3–7 штук)
Формат для каждого: `USx: <краткое название> — <цель/результат>`.
**Детализация:** одно предложение на сценарий.

## 4. Функциональные требования (FR) с критериями приёмки (AC)
Структура для каждого FR:
- **FRx.** Что должно быть реализовано (операции, поля/валидации, состояния).
- **AC:** нумерованный список проверок (Given/When/Then или буллеты).
- **Пример:** одно короткое значение/скрин-кейс (текстом).
**Детализация:** 3–5 подпунктов на FR, 2–5 AC.

## 5. UX и состояния интерфейса (минимум)
- Основные экраны/блоки (список, карточка, форма), мобильный вид при ширине 360–414 px.
- Состояния: загрузка, пусто, ошибка, успех.
- Набор контролов/шкал (если применимо) и их градации.
**Детализация:** перечисление блоков и состояний; без пиксель-перфекта.

## 6. Данные и правила (минимальная модель)
- **Сущности:** список (например: user, initiative, comment).
- **Поля:** таблица `имя | тип | обяз. | пример | примечание`.
- **Правила и вычисления:** формулы/округление/границы значений; пример расчёта.
- **Сортировки/фильтры:** что доступно по умолчанию.
**Детализация:** одна таблица на сущность + 1–2 примера.

## 7. Нефункциональные требования (только простота и надёжность)
- **Простота:** минимальное число шагов для ключевых сценариев; понятные подписи/плейсхолдеры.
- **Надёжность:** восстановление после перезагрузки; предсказуемые ошибки (toasts/inline).
- **Адаптивность:** корректный layout на мобиле (без горизонтального скролла).
- **Наблюдаемость:** логи ошибок на сервере, простые health-чеки.
**Не включаем:** требования по **производительности** и **безопасности** (они вне PRD).

## 8. Ограничения и допущения
- Технологические рамки (напр., веб-клиент, единая роль и т. п.).
- Что считается «за пределами» текущей версии (Out of Scope).
**Детализация:** 3–7 пунктов; без обсуждения рисков.

---

## Чек-лист перед отправкой PRD на ревью

- [ ] Для каждого сценария есть минимум один FR с AC.  
- [ ] Поля и их ограничения перечислены таблицей; примеры значений присутствуют.  
- [ ] Все вычисления описаны формульно + пример расчёта.  
- [ ] NFR содержат только простоту/надёжность/адаптивность/наблюдаемость.  
- [ ] Out of Scope определён.  
- [ ] Нет разделов про перфоманс, безопасность, риски, «готовность к демо».
